---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch
spec:
  version: 8.16.0
  nodeSets:
    - name: default
      count: 1
---
apiVersion: logstash.k8s.elastic.co/v1alpha1
kind: Logstash
metadata:
  name: logstash
spec:
  count: 1
  version: 8.16.0
  elasticsearchRefs:
    - clusterName: elastic-system #Or default, or whatever namespace you are using.
      name: elasticsearch
  podTemplate:
    spec:
      containers:
        - name: logstash
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "200m"
              memory: "1Gi"
          env:
            - name: ECK_ES_HOSTS
              value: "https://elasticsearch-es-http:9200" # Updated to HTTPS
            - name: ECK_ES_USER
              value: "elastic"
            - name: ECK_ES_PASSWORD
              value: "6i006g6zrx76k8OR6TQjB5oW"
            - name: ECK_ES_SSL_CERTIFICATE_AUTHORITY
              value: "/usr/share/logstash/config/certs/ca.crt"
            - name: LOGSTASH_SETTINGS
              value: "http.host: 0.0.0.0\nhttp.port: 9600\nhttp.enabled: true" #enable http monitoring
          volumeMounts:
            - name: elastic-ca
              mountPath: /usr/share/logstash/config/certs
              readOnly: true
          readinessProbe:
            httpGet:
              path: "/"
              port: 9600
            initialDelaySeconds: 10
            periodSeconds: 10
      securityContext:
        runAsUser: 1000 #Very important, logstash runs as 1000 user
      volumes:
        - name: elastic-ca
          secret:
            secretName: elasticsearch-es-http-certs-public
  pipelines:
  - pipeline.id: main
    config.string: |
      input {
        tcp {
          port => 5044
          codec => json
        }
      }
      output {
        elasticsearch {
          hosts => [ "${ECK_ES_HOSTS}" ]
          user => "${ECK_ES_USER}"
          password => "${ECK_ES_PASSWORD}"
          ssl => true
          cacert => "${ECK_ES_SSL_CERTIFICATE_AUTHORITY}"
        }
      }
